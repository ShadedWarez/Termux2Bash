#!/data/data/com.termux/files/usr/bin/bash

# Install required packages
apt install proot proot-distro bsdtar axel neofetch -y
clear

cd $HOME

# Display the menu
echo "Please select the Distro:"
echo "1. alma"
echo "2. alpine"
echo "3. altlinux"
echo "4. amazon"
echo "5. archlinux"
echo "6. artix"
echo "7. backbox"
echo "8. blackarch"
echo "9. centos"
echo "10. chimera"
echo "11. fedora"
echo "12. gentoo"
echo "13. debian"
echo "14. debkali"
echo "15. deepin"
echo "16. devuan"
echo "17. kali"
echo "18. manjaro"
echo "19. openkylin"
echo "20. openwrt"
echo "21. openeuler"
echo "22. opensuse"
echo "23. oracle"
echo "24. parrot"
echo "25. pardus"
echo "26. photon"
echo "27. rocky"
echo "28. ubuntu"
echo "29. ujammy"
echo "30. void"

# Read the user's choice
read -p "Enter the number: " choice

# Set the FS variable based on the user's choice
case $choice in
    1)
        FS="alma"
        ;;
    2)
        FS="alpine"
        ;;
    3)
        FS="altlinux"
        ;;
    4)
        FS="amazon"
        ;;
    5)
        FS="archlinux"
        ;;
    6)
        FS="artix"
        ;;
    7)
        FS="backbox"
        ;;
    8)
        FS="blackarch"
        ;;
    9)
        FS="centos"
        ;;
    10)
        FS="chimera"
        ;;
    11)
        FS="fedora"
        ;;
    12)
        FS="gentoo"
        ;;
    13)
        FS="debian"
        ;;
    14)
        FS="debkali"
        ;;
    15)
        FS="deepin"
        ;;
    16)
        FS="devuan"
        ;;
    17)
        FS="kali"
        ;;
    18)
        FS="manjaro"
        ;;
    19)
        FS="openkylin"
        ;;
    20)
        FS="openwrt"
        ;;
    21)
        FS="openeuler"
        ;;
    22)
        FS="opensuse"
        ;;
    23)
        FS="oracle"
        ;;
    24)
        FS="parrot"
        ;;
    25)
        FS="pardus"
        ;;
    26)
        FS="photon"
        ;;
    27)
        FS="rocky"
        ;;
    28)
        FS="ubuntu"
        ;;
    29)
        FS="ujammy"
        ;;
    30)
        FS="void"
        ;;
    *)
        echo "Invalid selection. Exiting."
        exit 1
        ;;
esac

# Output the selected value
echo "You Selected $FS"

# Read FS value
FS="$FS"

# Forward the value of FS to NM
NM="$FS"

# Capitalize the first letter of NM
NM=$(echo "$NM" | awk '{print toupper(substr($0,1,1)) substr($0,2)}')

# Display neofetch with custom ASCII art
neofetch --ascii_distro "${NM}" -L

# Download the rootfs using axel
axel -a -o "${FS}.tar.xz" "https://github.com/xiv3r/Termux-Pentesting-Distro/releases/download/rootfs/${FS}.tar.xz"

# Create a proot-distro configuration file for the Kali minimal rootfs
echo " "
echo "Checking ${NM} integrity...."
cat > "$HOME/${NM}_SHA256" << EOF
${NM}_SHA256= "$(sha256sum "${FS}.tar.xz" | awk '{print $1}')"
EOF
echo " "
cat "$HOME/${NM}_SHA256"

# Extract the rootfs
echo " "
echo "[*] Extracting ${NM} Linux Rootfs...!!!"
proot --link2symlink bsdtar -xpJf "${FS}.tar.xz" 2>/dev/null

# Create a shortcut command to launch the distro
cat > $PREFIX/bin/${FS} <<- EOF
#!/data/data/com.termux/files/usr/bin/bash

cd $HOME
unset LD_PRELOAD
cmdline="proot \\
        --link2symlink \\
        -0 \\
        -r $FS \\
        -b /dev \\
        -b /proc \\
        -b /sdcard \\
        -b $FS/root:/dev/shm \\
        -w /root \\
           /usr/bin/env -i \\
           HOME=/root \\
           PATH=/usr/local/sbin:/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin \\
           TERM=\$TERM \\
           LANG=C.UTF-8 \\
           /bin/bash --login"

cmd="\$@"
if [ "\$#" == "0" ];then
    exec \$cmdline
else
    \$cmdline -c "\$cmd"
fi
EOF
chmod 755 $PREFIX/bin/${FS}

# Add start-up login notification
cat >> $PREFIX/etc/bash.bashrc << EOF
echo "Login ${NM} Linux: ${FS}"
EOF

# Add support for uninstallation
cat > $PREFIX/bin/uninstall-${FS} << EOF
#!/data/data/com.termux/files/usr/bin/bash

rm -rf ${FS}
rm ${NM}_SHA256
sed -i 's/echo "Login ${NM} Linux: ${FS}"//g' $PREFIX/etc/bash.bashrc
rm -rf $PREFIX/bin/uninstall-${FS}
rm -rf $PREFIX/bin/${FS}
EOF
chmod 755 "$PREFIX/bin/uninstall-${FS}"

# Free up space
rm -rf ${FS}.tar.xz

# Display final instructions
echo -e '\e[1;93m'
cat << EOF
Successful Installation!

To login ${NM} Linux, Type: ${FS}
EOF
