#!/data/data/com.termux/files/usr/bin/bash

# Install required packages
apt install proot proot-distro bsdtar axel neofetch -y
clear

cd $HOME

# Display the menu
echo "Select your Distro:"                                                 
echo "1. adelie"
echo "2. alma"
echo "3. alpine"
echo "4. altlinux"
echo "5. amazon"
echo "6. archlinux"
echo "7. artix"
echo "8. backbox"
echo "9. blackarch"
echo "10. centos"
echo "11. chimera"
echo "12. debian"
echo "13. deepin"
echo "14. devuan"
echo "15. fedora"
echo "16. gentoo"
echo "17. kali"
echo "18. manjaro"
echo "19. openeuler"
echo "20. openkylin"
echo "21. opensuse"
echo "22. openwrt"
echo "23. oracle"
echo "24. pardus"
echo "25. parrot"
echo "26. photon"
echo "27. rocky"
echo "28. ubuntu"
echo "29. ujammy"
echo "30. void"

# Read the user's choice
read -p "Enter the Number: " choice

# Set the FS variable based on the user's choice
case $choice in
    1)
        FS="adelie"
        ;;
    2)
        FS="alma"
        ;;
    3)
        FS="alpine"
        ;;
    4)
        FS="altlinux"
        ;;
    5)
        FS="amazon"
        ;;
    6)
        FS="archlinux"
        ;;
    7)
        FS="artix"
        ;;
    8)
        FS="backbox"
        ;;
    9)
        FS="blackarch"
        ;;
    10)
        FS="centos"
        ;;
    11)
        FS="chimera"
        ;;
    12)
        FS="debian"
        ;;
    13)
        FS="deepin"
        ;;
    14)
        FS="devuan"
        ;;
    15)
        FS="fedora"
        ;;
    16)
        FS="gentoo"
        ;;
    17)
        FS="kali"
        ;;
    18)
        FS="manjaro"
        ;;
    19)
        FS="openeuler"
        ;;
    20)
        FS="openkylin"
        ;;
    21)
        FS="opensuse"
        ;;
    22)
        FS="openwrt"
        ;;
    23)
        FS="oracle"
        ;;
    24)
        FS="pardus"
        ;;
    25)
        FS="parrot"
        ;;
    26)
        FS="photon"
        ;;
    27)
        FS="rocky"
        ;;
    28)
        FS="ubuntu"
        ;;
    29)
        FS="ujammy"
        ;;
    30)
        FS="void"
        ;;
    *)
        echo "Invalid value, Exiting...!!!"
        exit 1
        ;;
esac

clear

# Read FS value
FS=$FS

# Forward the value of FS to NM
NM=$FS

# Capitalize the first letter of NM
NM=$(echo $NM | awk '{print toupper(substr($0,1,1)) substr($0,2)}')

# Display neofetch with custom ASCII art
neofetch --ascii_distro $NM

# Output the selected value
echo "You Selected $NM Linux"
echo " "

# Download the rootfs using axel
axel -a -o $FS.tar.xz https://github.com/xiv3r/Termux-Pentesting-Distro/releases/download/rootfs/$FS.tar.xz

# Create a proot-distro configuration file
echo " "
echo "Checking $NM Linux File Integrity...!!!"
echo " "
sleep 3s
echo "MD5"
md5sum $FS.tar.xz
sleep 3s
echo " "
echo "SHA256"
sha256sum $FS.tar.xz
sleep 3s
echo " "
echo "SHA512"
sha512sum $FS.tar.xz
sleep 3s

# Extract the rootfs
echo " "
echo "[*] Extracting $NM Linux Rootfs...!!!"
proot --link2symlink bsdtar -xpJf $FS.tar.xz 2>/dev/null

# Create a shortcut command to launch the distro
cat > $PREFIX/bin/$FS <<- EOF
#!/data/data/com.termux/files/usr/bin/bash

cd $HOME
unset LD_PRELOAD
cmdline="proot \\
        --link2symlink \\
        -0 \\
        -r $FS \\
        -b /dev \\
        -b /proc \\
        -b /sdcard \\
        -b $FS/root:/dev/shm \\
        -w /root \\
           /usr/bin/env -i \\
           HOME=/root \\
           PATH=/usr/local/sbin:/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin \\
           TERM=\$TERM \\
           LANG=C.UTF-8 \\
           /bin/bash --login"

cmd="\$@"
if [ "\$#" == "0" ];then
    exec \$cmdline
else
    \$cmdline -c "\$cmd"
fi
EOF
chmod 755 $PREFIX/bin/${FS}

# Add start-up login notification
cat >> $PREFIX/etc/bash.bashrc << EOF
echo "Login $NM Linux: $FS"
EOF

# Add support for uninstallation
cat > $PREFIX/bin/uninstall-$FS << EOF
#!/data/data/com.termux/files/usr/bin/bash

rm -rf $FS
sed -i 's/echo "Login $NM Linux: $FS"//g' $PREFIX/etc/bash.bashrc
rm -rf $PREFIX/bin/uninstall-$FS
rm -rf $PREFIX/bin/$FS
EOF
chmod 755 $PREFIX/bin/uninstall-$FS

# Free up space
rm -rf $FS.tar.xz

# Display final instructions
echo " "
echo -e '\e[1;96mSuccessful Installation!'
echo -e '\e[0m'
cat <<- EOF
To login $NM Linux, Type: $FS
EOF

sleep 15s
clear

$FS
