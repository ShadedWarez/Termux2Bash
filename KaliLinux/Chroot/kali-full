#!/data/data/com.termux/files/usr/bin/bash -e

red='\033[1;31m'
yellow='\033[1;33m'
blue='\033[1;34m'
reset='\033[0m'

pre_cleanup() {
        find $HOME -name "kali*" -type d -exec rm -rf {} \; || :
}

post_cleanup() {
        find $HOME -name "kali*" -type f -exec rm -rf {} \; || :
} 

setchroot() {
	chroot=full
}

unknownarch() {
	printf "${red} [*] Unknown Architecture :("
	printf "\n${reset}"
	exit
}

checksysinfo() {
	printf "$blue [*] Checking system architecture ..."
	case $(getprop ro.product.cpu.abi) in
		arm64-v8a)
			SETARCH=arm64;;
		armeabi|armeabi-v7a)
			SETARCH=armhf;;
		*)
			unknownarch;;
	esac
        printf "\n [*] SETARCH = ${SETARCH}"
}

checkdeps() {
	printf "\n${blue} [*] Updating..."
	apt update -y &> /dev/null
	echo "\n [*] Checking dependencies..."

	for i in proot tar axel; do
		if [ -e $PREFIX/bin/$i ]; then
			echo "\n  â€¢ ${i} is OK"
		else
			echo "\nInstalling ${i}..."
			apt install -y $i || 
                        {
				printf "\n${red} ERROR: check your internet connection"
				printf "\n Exiting...${reset}\n"
				exit
			}
		fi
	done
	apt upgrade -y
}

seturl() {
	URL="https://kali.download/nethunter-images/current/rootfs/kali-nethunter-rootfs-${chroot}-${SETARCH}.tar.xz"
}

gettarfile() {
    seturl
    printf "\n$blue} [*] Fetching rootfs tarball..."
    printf "\n from ${URL}"
    cd $HOME
    rootfs="kali-nethunter-rootfs-${chroot}-${SETARCH}.tar.xz"
    printf "\n [*] Placing ${rootfs}"
    DESTINATION=$HOME/chroot/kali-$SETARCH
    printf "\n into {$DESTINATION}"
    printf "${reset}\n"
    if [ ! -f "$rootfs" ]; then
        axel ${EXTRAARGS} --alternate "$URL"
    else
        printf "${red} [!] Continue with existing file,"
        printf "\n if this image is corrupted or half downloaded then"
        printf "\n delete it manually and download again"
        printf "${reset}\n"
    fi
}

getsha() {
	printf "\n${blue} [*] Getting SHA ... $reset\n"
    if [ -f kali-nethunter-rootfs-${chroot}-${SETARCH}.tar.xz.sha512sum ]; then
        rm kali-nethunter-rootfs-${chroot}-${SETARCH}.tar.xz.sha512sum
    fi
	axel ${EXTRAARGS} 
             --alternate "${URL}.sha512sum" \\
             -o $rootfs.sha512sum
}

checkintegrity() {
	printf "\n${blue} [*] Checking integrity of file..."
	printf "${reset}\n"
	sha512sum -c $rootfs.sha512sum || \\
        {
		printf "${red} Sorry rootfs tarball was corrupted"
                printf "\n or retry to download again"
                printf "${reset}\n"
		exit 1
	}
}

extract() {
	printf "\n${blue} [*] Extracting ${rootfs}"
        printf "\n into ${DESTINATION}"
        printf "${reset}\n"
	proot --link2symlink \\
              tar -xf $rootfs \\
              -C $HOME 2> /dev/null || :
}

createloginfile() {
	bin=$PREFIX/bin/startkali.sh
        printf "\n${blue} [*] Creating ${bin}"
        printf "${reset}\n"
	cat > $bin <<- EOM
#!/data/data/com.termux/files/usr/bin/bash -e
unset LD_PRELOAD

red='\033[1;31m'
yellow='\033[1;33m'
blue='\033[1;34m'
reset='\033[0m'

unknownarch() {
	printf "\n${red} [*] Unknown Architecture :("
	printf "${reset}\n"
	exit
}

checksysinfo() {
	printf "\n$blue [*] Checking host architecture ..."
	case $(getprop ro.product.cpu.abi) in
		arm64-v8a)
			SETARCH=arm64;;
		armeabi|armeabi-v7a)
			SETARCH=armhf;;
		*)
			unknownarch;;
	esac
        printf "\n [*] SETARCH = ${SETARCH}"
}
if [ ! -f $DESTINATION/root/.version ]; then
    touch $DESTINATION/root/.version
fi
user=kali
home=$DESTINATION/home/$user
LOGIN="sudo -u \$user /bin/bash"
if [[ ("\$#" != "0" && ("\$1" == "-r")) ]]; then
    user=root
    home=$DESTINATION/$user
    LOGIN="/bin/bash --login"
    shift
fi

cmd="proot \\
    --link2symlink \\
    -0 \\
    -r ${DESTINATION} \\
    -b /dev \\
    -b /proc \\
    -b ${DESTINATION}/dev:/dev/shm \\
    -b /sdcard \\
    -b ${HOME} \\
    -w ${home} \\
    ${PREFIX}/bin/env -i \\
    HOME=${home} TERM=${TERM} \\
    LANG=${LANG} \\
    PATH=${DESTINATION}/bin:${home}/bin:${DESTINATION}/sbin:${home}/sbin:${DESTINATION}\etc:${home}/bin \\
    ${LOGIN}"

args="${@}"
if [ "${#}" == 0 ]; then
    exec $cmd
else
    $cmd -c "${args}"
fi
EOM
	chmod 700 $bin
}

printline() {
	printf "\n${blue}"
	echo " #---------------------------------#"
}

clear
EXTRAARGS=""
if [[ ! -z $1 ]]; then
    EXTRAARGS=$1
    if [[ $EXTRAARGS != "--insecure" ]]; then
		EXTRAARGS=""
    fi
fi

printf "\n${yellow} Installing Kali Nethunter Rootless"

pre_cleanup
checksysinfo
checkdeps
setchroot
gettarfile
getsha
checkintegrity
extract
createloginfile
post_cleanup

printf "\n${blue} [*] Configuring Kali..."

resolvconf() {
	#create resolv.conf file 
	printf "\nnameserver 8.8.8.8\nnameserver 8.8.4.4" > $DESTINATION/etc/resolv.conf
} 
resolvconf


finalwork() {
	[ -e $HOME/touch.sh ] && rm $HOME/touch.sh
	echo
	axel -a https://github.com/xiv3r/Termux-Pentesting-Distro/refs/heads/main/KaliLinux/Chroot/touch.sh
	DESTINATION=$DESTINATION SETARCH=$SETARCH bash $HOME/touch.sh
} 
finalwork

printline
printf "\n${yellow} Enjoy Kali Nethuter in your Termux"
printf "${reset}\n"
